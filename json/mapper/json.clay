import json.model.*;
import json.mapper.protocol.*;

[J]
record JsonVariantMemberMapper[J] ();

[J]
overload JsonMapperMaps(#JsonVariantMemberMapper[J]) = J, J;

[J when JsonVariantMember?(J)]
overload JsonMapper(#J) = JsonVariantMemberMapper[J];

[J]
overload mapToJson(m: JsonVariantMemberMapper[J], j: J) = j;

[J]
overload mapFromJson(m: JsonVariantMemberMapper[J], j: J) = j;


record JsonValueMapper ();

overload JsonMapperMaps(#JsonValueMapper) = JsonValue, JsonValue;

overload JsonMapper(#JsonValue) = JsonValueMapper;

overload mapToJson(m: JsonValueMapper, j: JsonValue) = j;

overload mapFromJson(m: JsonValueMapper, j: JsonValue) = j;
