import data.strings.*;

import test.*;

import json.*;
import json.mapper.*;
import json.support.unicode.*;

mapperStringTestSuite() =
    TestSuite(
        "mapper.string", array(
            TestCase("string to json", => {
                var j = mapToJsonQuick(String("bla"));
                expectEqual(JsonString("bla"), j);
            }),
            TestCase("string from json", => {
                var j = JsonString("The angels have the phone box");
                expectEqual("The angels have the phone box", mapFromJsonQuick(String, j));
                expectEqual("The angels have the phone box", mapFromJsonQuick(String, JsonValue(j)));
            }),
            TestCase("UTF8String from json", => {
                var j = JsonString("\xd1\x8f\xd1\x80");
                expectEqual(UTF8String("\xd1\x8f\xd1\x80"), mapFromJsonQuick(UTF8String, j));
                expectEqual(UTF8String("\xd1\x8f\xd1\x80"), mapFromJsonQuick(UTF8String, JsonValue(j)));
            }),
            TestCase("StringConstant to json", => {
                var j = mapToJsonQuick("yo");
                expectEqual(JsonString("yo"), j);
            }),
        )
    );


mapperStringTestMain() = testMain(mapperStringTestSuite());

main() = mapperStringTestMain();


